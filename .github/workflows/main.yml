name: Build and Deploy APK

permissions:
  contents: write

on: [push]
jobs:
  apline_build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build APK package inside Alpine container
        run: |
          docker run --rm -v $(pwd):/workspace -v $(pwd)/output:/home/builder/packages -w /workspace alpine:latest /bin/ash -c "\
            apk add alpine-sdk cargo && \
            adduser -D -G abuild builder && \
            chown -R builder /workspace && \
            chown -R builder /var/cache/distfiles/ && \
            su builder -c 'abuild-keygen -a -n' && \
            cp /home/builder/.abuild/*.rsa.pub /etc/apk/keys/ && \
            su builder -c 'abuild checksum' && \
            su builder -c 'abuild -r'
          "
          tree $(pwd)/output/
      - name: Upload Alpine APK
        uses: actions/upload-artifact@v2
        with:
          name: alpine-apk
          path: ./output/x86_64/jintemplify-*.apk
          if-no-files-found: error
          retention-days: 7

  macos_build:
    runs-on: macOS-latest

    strategy:
      matrix:
        architecture: [x86_64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build on macOS for ${{ matrix.architecture }}
        run: |
          rustup target add ${{ matrix.architecture }}-apple-darwin
          cargo build --release --target ${{ matrix.architecture }}-apple-darwin

      - name: Move macOS binary to output directory
        run: |
          mkdir -p payload/usr/local/bin/
          cp ./target/${{ matrix.architecture }}-apple-darwin/release/jintemplify payload/usr/local/bin/
          VERSION=$(./target/release/jintemplify --version | awk '{print $2}')
          echo "pkgbuild version=${VERSION}"
          pkgbuild --root payload --identifier com.supercoolai.jintemplify --version $VERSION jintemplify-${{ matrix.architecture }}.pkg

      - name: Upload macos artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos-binary-${{ matrix.architecture }}
          path: jintemplify-${{ matrix.architecture }}.pkg
          if-no-files-found: error
          retention-days: 7

  dist:
    needs: [macos_build, apline_build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: upload-artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./alpine-apk/jintemplify-*.apk
            ./macos-binary/jintemplify-*.pkg
          tag_name: ${{ github.ref }}
